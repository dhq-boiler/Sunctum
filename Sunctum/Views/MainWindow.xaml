<Window
    x:Class="Sunctum.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:Sunctum.Views.Behaviors"
    xmlns:cvt="clr-namespace:Sunctum.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:Sunctum.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:properties="clr-namespace:Sunctum.Properties"
    xmlns:trigger="clr-namespace:Sunctum.Views.Triggers"
    xmlns:ui.ctrl="clr-namespace:Sunctum.UI.Controls;assembly=Sunctum.UI"
    Title="{Binding MainWindowTitle}"
    Width="{Binding WindowWidth, Mode=TwoWay}"
    Height="{Binding WindowHeight, Mode=TwoWay}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Closed="Window_Closed"
    Left="{Binding WindowLeft, Mode=TwoWay}"
    Loaded="Window_Loaded"
    Top="{Binding WindowTop, Mode=TwoWay}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding CloseRequest}">
            <trigger:CloseWindowAction />
        </prism:InteractionRequestTrigger>
        <trigger:LeftKeyDownEventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding LeftKeyDownCommand}" />
        </trigger:LeftKeyDownEventTrigger>
        <trigger:RightKeyDownEventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding RightKeyDownCommand}" />
        </trigger:RightKeyDownEventTrigger>
        <trigger:XButton1MouseDownEventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding XButton1MouseButtonDownCommand}" />
        </trigger:XButton1MouseDownEventTrigger>
        <trigger:XButton2MouseDownEventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding XButton2MouseButtonDownCommand}" />
        </trigger:XButton2MouseDownEventTrigger>
        <trigger:MouseWheelEventTrigger EventName="MouseWheel">
            <prism:InvokeCommandAction Command="{Binding MouseWheelCommand}" TriggerParameterPath="Delta" />
        </trigger:MouseWheelEventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding GeneralCancelCommand}" />
        <KeyBinding
            Key="F"
            Command="{Binding OpenSearchPaneCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="F4"
            Command="{Binding ExitApplicationCommand}"
            Modifiers="Alt" />
    </Window.InputBindings>
    <Window.Resources>
        <properties:Resources x:Key="resources" />
        <cvt:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <cvt:PathToWriteableBitmap x:Key="ImageConverter" />
        <cvt:BookCoverThumbnailLoader x:Key="BookCoverThumbnailLoader" />
        <cvt:BookSortingToBool x:Key="BookSortingToBool" />
        <cvt:PageThumbnailLoader x:Key="PageThumbnailLoader" />
        <cvt:PathToMenuItem x:Key="PathToMenuItem" />
        <cvt:MarginConverter x:Key="MarginConverter" />
        <ItemsPanelTemplate x:Key="Contents_ItemPanelTemplate">
            <WrapPanel />
        </ItemsPanelTemplate>
        <Storyboard x:Key="appearItem">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0.0"
                To="1.0"
                Duration="0:0:0.25" />
        </Storyboard>
        <Style x:Key="Contents_ListViewItem_Style" TargetType="{x:Type ListBoxItem}">
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="Control.MouseDoubleClick" Handler="Contents_ListViewItem_MouseDoubleClick" />
            <EventSetter Event="PreviewDragOver" Handler="Contents_ListViewItem_PreviewDragOver" />
            <EventSetter Event="Drop" Handler="Contents_ListViewItem_Drop" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsScrapped}" Value="true">
                    <Setter Property="Background" Value="#88FFA500" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="PowderBlue" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="SkyBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="Contents_ListViewItem_DataTemplate">
            <Grid>
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource MarginConverter}">
                        <Binding Path="Configuration.ContentListViewItemMarginLeft" />
                        <Binding Path="Configuration.ContentListViewItemMarginTop" />
                        <Binding Path="Configuration.ContentListViewItemMarginRight" />
                        <Binding Path="Configuration.ContentListViewItemMarginBottom" />
                    </MultiBinding>
                </Grid.Margin>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemImageHeight}" />
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemTitleHeight}" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{Binding Converter={StaticResource PageThumbnailLoader}}" Visibility="Collapsed" />
                <Image
                    Grid.Row="0"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.ContentListViewItemWidth}"
                    MaxHeight="{Binding Configuration.ContentListViewItemImageHeight}"
                    Margin="5"
                    Source="{Binding Image.Path, Converter={StaticResource ImageConverter}}">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource appearItem}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label
                    Grid.Row="1"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemTitleHeight}"
                    Margin="0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Content="{Binding UnescapedTitle}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Contents_ListViewItem_Sorting_DataTemplate">
            <Grid>
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource MarginConverter}">
                        <Binding Path="Configuration.ContentListViewItemMarginLeft" />
                        <Binding Path="Configuration.ContentListViewItemMarginTop" />
                        <Binding Path="Configuration.ContentListViewItemMarginRight" />
                        <Binding Path="Configuration.ContentListViewItemMarginBottom" />
                    </MultiBinding>
                </Grid.Margin>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemImageHeight}" />
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemTitleHeight}" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{Binding Converter={StaticResource PageThumbnailLoader}}" Visibility="Collapsed" />
                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.ContentListViewItemWidth}"
                    MaxHeight="{Binding Configuration.ContentListViewItemImageHeight}"
                    Margin="5"
                    Source="{Binding Image.Path, Converter={StaticResource ImageConverter}}" />
                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemTitleHeight}"
                    Margin="0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Content="{Binding UnescapedTitle}" />
                <Button
                    x:Name="MoveBackword_Button"
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    Click="MoveBackword_Button_Click"
                    Content="←" />
                <Button
                    x:Name="MoveForward_Button"
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="0,0,5,0"
                    Click="MoveForward_Button_Click"
                    Content="→" />
            </Grid>
        </DataTemplate>
        <Style x:Key="Contents_ListView_Style" TargetType="{x:Type ListView}">
            <Setter Property="ItemsPanel" Value="{StaticResource Contents_ItemPanelTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource Contents_ListViewItem_Style}" />
            <Setter Property="ItemTemplate" Value="{StaticResource Contents_ListViewItem_DataTemplate}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu ItemsSource="{Binding ContentsContextMenuItems}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Tag_ListViewItem_Style" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <TextBlock>
                            <TextBlock Text="{Binding Tag.UnescapedName}" />
                            <TextBlock Text="(" />
                            <TextBlock Text="{Binding Count}" />
                            <TextBlock Text=")" />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel SizeChanged="DockPanel_SizeChanged">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{Binding MainWindow_File, Source={StaticResource resources}}">
                <MenuItem Command="{Binding ImportFilesCommand}" Header="{Binding MainWindow_File_ImportFiles, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding ImportFoldersCommand}" Header="{Binding MainWindow_File_ImportFolders, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding ImportLibraryCommand}" Header="{Binding MainWindow_File_ImportLibrary, Source={StaticResource resources}}" />
                <Separator />
                <MenuItem Command="{Binding ReloadLibraryCommand}" Header="{Binding MainWindow_File_ReloadLibrary, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenSwitchLibraryCommand}" Header="{Binding MainWindow_File_SwitchLibrary, Source={StaticResource resources}}" />
                <MenuItem
                    DisplayMemberPath="Path"
                    Header="{Binding MainWindow_File_RecentLibraries, Source={StaticResource resources}}"
                    ItemsSource="{Binding LibraryVM.RecentOpenedLibraryList}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SwitchLibraryCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding ShowPreferenceDialogCommand}" Header="{Binding MainWindow_File_Preferences, Source={StaticResource resources}}" />
                <Separator />
                <MenuItem Command="{Binding ExitApplicationCommand}" Header="{Binding MainWindow_File_ExitSunctum, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Data, Source={StaticResource resources}}">
                <MenuItem Header="{Binding MainWindow_Data_BookSize, Source={StaticResource resources}}">
                    <MenuItem Command="{Binding UpdateBookByteSizeAllCommand}" Header="{Binding MainWindow_Data_BookSize_UpdateSizeAllBooks, Source={StaticResource resources}}" />
                    <MenuItem Command="{Binding UpdateBookByteSizeStillNullCommand}" Header="{Binding MainWindow_Data_BookSize_UpdateSizeQuickly, Source={StaticResource resources}}" />
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding OpenAuthorManagementDialogCommand}" Header="{Binding MainWindow_Data_AuthorManagement, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenTagManagementDialogCommand}" Header="{Binding MainWindow_Data_TagManagement, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenMetadataImportSettingDialogCommand}" Header="{Binding MainWindow_Data_MetadataImportSetting, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Search, Source={StaticResource resources}}">
                <MenuItem
                    Header="{Binding SearchStatusText}"
                    IsEnabled="False"
                    Visibility="{Binding LibraryVM.IsSearching, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuItem Command="{Binding OpenSearchPaneCommand}" Header="{Binding MainWindow_Search_Search, Source={StaticResource resources}}" />
                <Separator />
                <MenuItem Command="{Binding ClearSearchResultCommand}" Header="{Binding MainWindow_Search_ClearSearchResult, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Display, Source={StaticResource resources}}">
                <MenuItem Header="{Binding MainWindow_Display_Window, Source={StaticResource resources}}">
                    <MenuItem
                        Command="{Binding ToggleDisplayInformationPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Information, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayInformationPane}" />
                    <MenuItem
                        Command="{Binding ToggleDisplayTagPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Tag, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayTagPane}" />
                    <MenuItem
                        Command="{Binding ToggleDisplayAuthorPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Author, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayAuthorPane}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="{Binding MainWindow_Display_Sorting, Source={StaticResource resources}}">
                    <MenuItem
                        Command="{Binding SortBookByLoadedAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_LoadedAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByLoadedAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByLoadedDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_LoadedDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByLoadedDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByTitleAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_TitleAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByTitleAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByTitleDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_TitleDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByTitleDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByAuthorAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_AuthorAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByAuthorAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByAuthorDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_AuthorDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByAuthorDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverBlueAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverBlueAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverBlueAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverBlueDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverBlueDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverBlueDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverGreenAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverGreenAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverGreenAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverGreenDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverGreenDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverGreenDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverRedAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverRedAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverRedAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverRedDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverRedDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding LibraryVM.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverRedDesc}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Help, Source={StaticResource resources}}">
                <MenuItem Command="{Binding AboutSunctumCommand}" Header="{Binding MainWindow_Help_AboutSunctum, Source={StaticResource resources}}" />
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Bottom">
            <local:ProgressBar
                Height="5"
                IsAborted="{Binding LibraryVM.ProgressManager.IsAbort}"
                ProgressionRate="{Binding LibraryVM.ProgressManager.Progress}"
                ToolTip="{Binding TooltipOnProgressBar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>
        <DockPanel DockPanel.Dock="Left" Visibility="{Binding DisplayTagPane, Converter={StaticResource BoolToVisibilityConverter}}">
            <DockPanel Background="LightGray" DockPanel.Dock="Top">
                <Button
                    x:Name="Button_Close_TagPane"
                    Margin="3"
                    Padding="2"
                    Background="#e81123"
                    BorderBrush="Transparent"
                    Click="Tag_Button_Close_Click"
                    DockPanel.Dock="Right">
                    <Path Fill="White" Stroke="Transparent">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Union">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0,3,7.5,1.5" />
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="3,0,1.5,7.5" />
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                        <Path.LayoutTransform>
                            <RotateTransform Angle="45" />
                        </Path.LayoutTransform>
                    </Path>
                </Button>
                <Button
                    x:Name="Button_TagPane_Order"
                    Width="18"
                    Margin="3"
                    Click="Button_TagPane_Order_Click"
                    Content="{Binding LibraryVM.TagMng.OrderText}"
                    DockPanel.Dock="Right" />
                <ToggleButton
                    Width="18"
                    Margin="3"
                    Content="A"
                    DockPanel.Dock="Right"
                    IsChecked="{Binding LibraryVM.TagMng.EnableOrderByName}" />
                <Label>Tag</Label>
            </DockPanel>
            <ListBox
                x:Name="Tag_ListBox"
                Width="200"
                behavior:MultiSelectorBehaviours.SynchronizedSelectedItems="{Binding TagListBoxSelectedItems}"
                ItemsSource="{Binding LibraryVM.TagMng.OnStage}"
                MouseMove="Tag_ListBox_MouseMove"
                PreviewKeyDown="Tag_ListBox_PreviewKeyDown"
                PreviewMouseLeftButtonDown="Tag_ListBox_MouseLeftButtonDown"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                SelectionMode="Extended">
                <ListBox.ContextMenu>
                    <ContextMenu ItemsSource="{Binding TagContextMenuItems}" />
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Tag.UnescapedName}" />
                            <Run Text="(" />
                            <Run Text="{Binding Count}" />
                            <Run Text=")" />
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSearchingKey}" Value="True">
                                <Setter Property="Background" Value="#88FFA500" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSearchingKey}" Value="False">
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </DockPanel>
        <DockPanel DockPanel.Dock="Left" Visibility="{Binding DisplayAuthorPane, Converter={StaticResource BoolToVisibilityConverter}}">
            <local:AuthorPane DataContext="{Binding AuthorPaneViewModel}" />
        </DockPanel>
        <DockPanel DockPanel.Dock="Right" Visibility="{Binding DisplayInformationPane, Converter={StaticResource BoolToVisibilityConverter}}">
            <DockPanel Background="LightGray" DockPanel.Dock="Top">
                <Button
                    x:Name="Button_Close_InformationPane"
                    Margin="3"
                    Padding="2"
                    Background="#e81123"
                    BorderBrush="Transparent"
                    Click="Information_Button_Close_Click"
                    DockPanel.Dock="Right">
                    <Path Fill="White" Stroke="Transparent">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Union">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0,3,7.5,1.5" />
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="3,0,1.5,7.5" />
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                        <Path.LayoutTransform>
                            <RotateTransform Angle="45" />
                        </Path.LayoutTransform>
                    </Path>
                </Button>
                <Label>Information</Label>
            </DockPanel>
            <ui.ctrl:SimpleGrid
                Background="LightGray"
                Columns="3"
                DockPanel.Dock="Bottom"
                Rows="1">
                <ui.ctrl:EasyEnterTextBox
                    x:Name="TextBox_NewTag"
                    Width="140"
                    Height="25"
                    Margin="3,3,0,3" />
                <Button
                    x:Name="Button_TagPlus"
                    Margin="3"
                    Padding="3"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Click="Information_Button_TagPlus_Click">
                    <Path Fill="gray" Stroke="Transparent">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Union">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="1,7,15,3" />
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="7,1,3,15" />
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>
                </Button>
                <Button
                    x:Name="Button_TagMinus"
                    Margin="3"
                    Padding="3"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Click="Information_Button_TagMinus_Click">
                    <Path Fill="gray" Stroke="Transparent">
                        <Path.Data>
                            <RectangleGeometry Rect="1,1,15,3" />
                        </Path.Data>
                    </Path>
                </Button>
            </ui.ctrl:SimpleGrid>
            <ListView
                x:Name="Information_ListView_SelectedEntriesTags"
                AllowDrop="True"
                Drop="Information_ListView_SelectedEntriesTags_Drop"
                ItemsSource="{Binding LibraryVM.TagMng.SelectedEntityTags}"
                PreviewDragOver="Information_ListView_SelectedEntriesTags_PreviewDragOver"
                PreviewKeyDown="Information_ListView_SelectedEntriesTags_PreviewKeyDown">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding UnescapedName}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DockPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="27" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="SearchPane_Border"
                Grid.Row="0"
                Grid.Column="0"
                Panel.ZIndex="1000"
                BorderBrush="Gray"
                BorderThickness="1">
                <Border.Resources />
                <i:Interaction.Triggers>
                    <ei:PropertyChangedTrigger Binding="{Binding SearchPaneIsVisible}">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression>
                                    <ei:ComparisonCondition LeftOperand="{Binding SearchPaneIsVisible}" RightOperand="True" />
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:ChangePropertyAction
                            PropertyName="Visibility"
                            TargetObject="{Binding ElementName=SearchPane_Border}"
                            Value="Visible" />
                        <trigger:FocusAction TargetObject="{Binding ElementName=Search_TextBox}" />
                        <ei:CallMethodAction MethodName="SelectAll" TargetObject="{Binding ElementName=Search_TextBox}" />
                    </ei:PropertyChangedTrigger>
                    <ei:PropertyChangedTrigger Binding="{Binding SearchPaneIsVisible}">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression>
                                    <ei:ComparisonCondition LeftOperand="{Binding SearchPaneIsVisible}" RightOperand="False" />
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:ChangePropertyAction
                            PropertyName="Visibility"
                            TargetObject="{Binding ElementName=SearchPane_Border}"
                            Value="Collapsed" />
                    </ei:PropertyChangedTrigger>
                </i:Interaction.Triggers>
                <StackPanel Background="{x:Static SystemColors.ControlLightBrush}" Orientation="Horizontal">
                    <Button
                        x:Name="CloseSearchPane_Button"
                        Width="15"
                        Height="15"
                        Margin="5"
                        Command="{Binding CloseSearchPaneCommand}">
                        <Canvas
                            Name="canvas"
                            Width="11"
                            Height="11">
                            <Path Stroke="Black" StrokeThickness="2">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigure StartPoint="1,1">
                                                <LineSegment Point="10,10" />
                                            </PathFigure>
                                            <PathFigure StartPoint="1,10">
                                                <LineSegment Point="10,1" />
                                            </PathFigure>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Button>
                    <ui.ctrl:EasyEnterTextBox
                        x:Name="Search_TextBox"
                        Width="200"
                        Margin="3"
                        Text="{Binding UnescapedSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextChanged="Search_TextBox_TextChanged" />
                </StackPanel>
            </Border>
            <Grid
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Grid.ColumnSpan="2">
                <ListView
                    x:Name="Book_ListView"
                    AllowDrop="True"
                    Drop="Book_ListView_Drop"
                    ItemsSource="{Binding LibraryVM.OnStage}"
                    PreviewDragOver="Book_ListView_PreviewDragOver"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    SelectionChanged="Book_ListView_SelectionChanged"
                    SelectionMode="Extended"
                    SizeChanged="Book_ListView_SizeChanged"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling"
                    Visibility="Visible">
                    <i:Interaction.Triggers>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="BookView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Book_ListView}"
                                Value="Visible" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="PageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Book_ListView}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="ImageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Book_ListView}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                        <trigger:HomeKeyDownEventTrigger>
                            <trigger:ScrollTopAction TargetObject="{Binding ElementName=Book_ListView}" />
                        </trigger:HomeKeyDownEventTrigger>
                        <trigger:EndKeyDownEventTrigger>
                            <trigger:ScrollEndAction TargetObject="{Binding ElementName=Book_ListView}" />
                        </trigger:EndKeyDownEventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ui.ctrl:VirtualizingWrapPanel>
                                <i:Interaction.Triggers>
                                    <prism:InteractionRequestTrigger SourceObject="{Binding ResetScrollOffsetRequest}">
                                        <trigger:ResetScrollOffsetAction />
                                    </prism:InteractionRequestTrigger>
                                    <prism:InteractionRequestTrigger SourceObject="{Binding StoreBookScrollOffsetRequest}">
                                        <trigger:StoreScrollOffsetAction />
                                    </prism:InteractionRequestTrigger>
                                    <prism:InteractionRequestTrigger SourceObject="{Binding RestoreBookScrollOffsetRequest}">
                                        <trigger:RestoreScrollOffsetAction />
                                    </prism:InteractionRequestTrigger>
                                </i:Interaction.Triggers>
                            </ui.ctrl:VirtualizingWrapPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.Margin>
                                    <MultiBinding Converter="{StaticResource MarginConverter}">
                                        <Binding Path="Configuration.BookListViewItemMarginLeft" />
                                        <Binding Path="Configuration.BookListViewItemMarginTop" />
                                        <Binding Path="Configuration.BookListViewItemMarginRight" />
                                        <Binding Path="Configuration.BookListViewItemMarginBottom" />
                                    </MultiBinding>
                                </Grid.Margin>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="{Binding Configuration.BookListViewItemAuthorHeight}" />
                                    <RowDefinition Height="{Binding Configuration.BookListViewItemTitleHeight}" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Configuration.BookListViewItemWidth}" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{Binding Converter={StaticResource BookCoverThumbnailLoader}}" Visibility="Collapsed" />
                                <Image
                                    Grid.Row="0"
                                    Height="{Binding Configuration.BookListViewItemImageHeight}"
                                    MaxWidth="{Binding Configuration.BookListViewItemWidth}"
                                    MaxHeight="{Binding Configuration.BookListViewItemImageHeight}"
                                    Opacity="0.0"
                                    Source="{Binding FirstPage.Image.Path, Converter={StaticResource ImageConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource appearItem}" />
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <ui.ctrl:AutoScrollingHyperlink
                                    Grid.Row="1"
                                    Width="{Binding Configuration.BookListViewItemWidth}"
                                    DataContext="{Binding Author}"
                                    HyperlinkClicked="AutoScrollingHyperlink_HyperlinkClicked"
                                    Text="{Binding UnescapedName}" />
                                <ui.ctrl:AutoScrollingLabel
                                    x:Name="Book_Title_AutoScrollingLabel"
                                    Grid.Row="2"
                                    Width="{Binding Configuration.BookListViewItemWidth}"
                                    Text="{Binding UnescapedTitle}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" Value="0.5" />
                            <EventSetter Event="Control.MouseDoubleClick" Handler="Book_ListViewItem_MouseDoubleClick" />
                            <EventSetter Event="PreviewDragOver" Handler="Book_ListViewItem_PreviewDragOver" />
                            <EventSetter Event="Drop" Handler="Book_ListViewItem_Drop" />
                            <EventSetter Event="MouseEnter" Handler="Book_ListViewItem_MouseEnter" />
                            <EventSetter Event="MouseLeave" Handler="Book_ListViewItem_MouseLeave" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="PowderBlue" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="SkyBlue" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ContentsRegistered}" Value="True" />
                                        <Condition Binding="{Binding IsLoaded}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="1.0" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ContextMenu>
                        <ContextMenu ItemsSource="{Binding BooksContextMenuItems}" />
                    </ListView.ContextMenu>
                </ListView>
                <DockPanel x:Name="Contents_DockPanel" Visibility="Hidden">
                    <i:Interaction.Triggers>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="BookView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Contents_DockPanel}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="PageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Contents_DockPanel}"
                                Value="Visible" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="ImageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=Contents_DockPanel}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                    <Grid DockPanel.Dock="Top">
                        <DockPanel>
                            <DockPanel.Resources>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Width" Value="50" />
                                    <Setter Property="Height" Value="50" />
                                </Style>
                            </DockPanel.Resources>
                            <Button
                                x:Name="BackToBooks_Button"
                                Margin="5"
                                Click="BackToBooks_Button_Click"
                                Content="Back"
                                DockPanel.Dock="Left" />
                            <Button
                                x:Name="SwitchSorting_Button"
                                Margin="5"
                                Click="SwitchSorting_Button_Click"
                                Content="Sort"
                                DockPanel.Dock="Right" />
                            <Grid />
                        </DockPanel>
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </StackPanel.Resources>
                            <ui.ctrl:SelectableLabel HorizontalAlignment="Center" Text="{Binding OpenedBook.Author.UnescapedName}" />
                            <ui.ctrl:SelectableLabel HorizontalAlignment="Center" Text="{Binding OpenedBook.UnescapedTitle}" />
                        </StackPanel>
                    </Grid>
                    <ListView
                        x:Name="Contents_ListView"
                        ItemsSource="{Binding OpenedBook.Contents}"
                        SelectionChanged="Contents_ListView_SelectionChanged"
                        SizeChanged="Contents_ListView_SizeChanged"
                        Style="{StaticResource Contents_ListView_Style}"
                        VirtualizingPanel.IsVirtualizing="True"
                        VirtualizingPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ui.ctrl:VirtualizingWrapPanel>
                                    <i:Interaction.Triggers>
                                        <prism:InteractionRequestTrigger SourceObject="{Binding ResetScrollOffsetRequest}">
                                            <trigger:ResetScrollOffsetAction />
                                        </prism:InteractionRequestTrigger>
                                        <prism:InteractionRequestTrigger SourceObject="{Binding StoreContentScrollOffsetRequest}">
                                            <trigger:StoreScrollOffsetAction />
                                        </prism:InteractionRequestTrigger>
                                        <prism:InteractionRequestTrigger SourceObject="{Binding RestoreContentScrollOffsetRequest}">
                                            <trigger:RestoreScrollOffsetAction />
                                        </prism:InteractionRequestTrigger>
                                    </i:Interaction.Triggers>
                                </ui.ctrl:VirtualizingWrapPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </DockPanel>
                <DockPanel x:Name="ImageViewer_DockPanel" Visibility="Hidden">
                    <i:Interaction.Triggers>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="BookView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=ImageViewer_DockPanel}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="PageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=ImageViewer_DockPanel}"
                                Value="Hidden" />
                        </ei:PropertyChangedTrigger>
                        <ei:PropertyChangedTrigger Binding="{Binding ActiveContent}">
                            <i:Interaction.Behaviors>
                                <ei:ConditionBehavior>
                                    <ei:ConditionalExpression>
                                        <ei:ComparisonCondition LeftOperand="{Binding ActiveContent}" RightOperand="ImageView" />
                                    </ei:ConditionalExpression>
                                </ei:ConditionBehavior>
                            </i:Interaction.Behaviors>
                            <ei:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetObject="{Binding ElementName=ImageViewer_DockPanel}"
                                Value="Visible" />
                        </ei:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                    <Grid DockPanel.Dock="Top">
                        <DockPanel>
                            <DockPanel.Resources>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Width" Value="50" />
                                    <Setter Property="Height" Value="50" />
                                </Style>
                            </DockPanel.Resources>
                            <Button
                                x:Name="BackToPages_Button"
                                Margin="5"
                                Click="BackToPages_Button_Click"
                                Content="Back"
                                DockPanel.Dock="Left" />
                            <TextBlock
                                Width="75"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Right"><Run Text="{Binding CurrentPage, Mode=OneWay}" /><Run Text=" " /><Run Text=" / " /><Run Text=" " /><Run Text="{Binding OpenedBook.NumberOfPages, Mode=OneWay}" />
                            </TextBlock>
                            <Grid />
                        </DockPanel>
                        <StackPanel Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type ui.ctrl:SelectableLabel}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </StackPanel.Resources>
                            <ui.ctrl:SelectableLabel Margin="0,14,0,0" Text="{Binding OpenedBook.Author.UnescapedName}" />
                            <ui.ctrl:SelectableLabel Text="{Binding OpenedBook.UnescapedTitle}" />
                            <ui.ctrl:SelectableLabel Text="{Binding OpenedPage.UnescapedTitle}" />
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <Grid>
                            <Image Source="{Binding OpenedPage.Image.AbsoluteMasterPath, Converter={StaticResource ImageConverter}}" Stretch="Uniform" />
                        </Grid>
                        <Grid
                            x:Name="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea"
                            Background="Transparent"
                            MouseEnter="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea_MouseEnter"
                            MouseLeave="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea_MouseLeave">
                            <DockPanel>
                                <Grid DockPanel.Dock="Left">
                                    <local:BlinkBlackWhiteButton
                                        x:Name="GoBack_Button"
                                        Width="75"
                                        Height="75"
                                        ButtonContent="&lt;"
                                        Click="GoBack_Button_Click"
                                        FocusArea="{Binding ElementName=Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea}">
                                        <i:Interaction.Triggers>
                                            <prism:InteractionRequestTrigger SourceObject="{Binding BlinkGoBackButtonRequest}">
                                                <ei:CallMethodAction MethodName="Blink" TargetObject="{Binding ElementName=GoBack_Button}" />
                                            </prism:InteractionRequestTrigger>
                                        </i:Interaction.Triggers>
                                    </local:BlinkBlackWhiteButton>
                                </Grid>
                                <Grid DockPanel.Dock="Right">
                                    <local:BlinkBlackWhiteButton
                                        x:Name="GoNext_Button"
                                        Width="75"
                                        Height="75"
                                        ButtonContent="&gt;"
                                        Click="GoNext_Button_Click"
                                        FocusArea="{Binding ElementName=Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea}">
                                        <i:Interaction.Triggers>
                                            <prism:InteractionRequestTrigger SourceObject="{Binding BlinkGoNextButtonRequest}">
                                                <ei:CallMethodAction MethodName="Blink" TargetObject="{Binding ElementName=GoNext_Button}" />
                                            </prism:InteractionRequestTrigger>
                                        </i:Interaction.Triggers>
                                    </local:BlinkBlackWhiteButton>
                                </Grid>
                                <Grid />
                            </DockPanel>
                        </Grid>
                    </Grid>
                </DockPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
