<Window
    x:Class="Sunctum.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:behavior="clr-namespace:Sunctum.Views.Behaviors"
    xmlns:cvt="clr-namespace:Sunctum.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:Sunctum.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:properties="clr-namespace:Sunctum.Properties"
    xmlns:trigger="clr-namespace:Sunctum.Views.Triggers"
    xmlns:ui.ctrl="clr-namespace:Sunctum.UI.Controls;assembly=Sunctum.UI"
    xmlns:viewModel="clr-namespace:Sunctum.ViewModels"
    Title="{Binding MainWindowTitle}"
    Width="{Binding WindowWidth, Mode=TwoWay}"
    Height="{Binding WindowHeight, Mode=TwoWay}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Closed="Window_Closed"
    Left="{Binding WindowLeft, Mode=TwoWay}"
    Loaded="Window_Loaded"
    Top="{Binding WindowTop, Mode=TwoWay}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <trigger:LeftKeyDownEventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding ActiveDocumentViewModel.LeftKeyDownCommand}" />
        </trigger:LeftKeyDownEventTrigger>
        <trigger:RightKeyDownEventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding ActiveDocumentViewModel.RightKeyDownCommand}" />
        </trigger:RightKeyDownEventTrigger>
        <trigger:XButton1MouseDownEventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding ActiveDocumentViewModel.XButton1MouseButtonDownCommand}" />
        </trigger:XButton1MouseDownEventTrigger>
        <trigger:XButton2MouseDownEventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding ActiveDocumentViewModel.XButton2MouseButtonDownCommand}" />
        </trigger:XButton2MouseDownEventTrigger>
        <trigger:MouseWheelEventTrigger EventName="MouseWheel">
            <prism:InvokeCommandAction Command="{Binding ActiveDocumentViewModel.MouseWheelCommand}" TriggerParameterPath="Delta" />
        </trigger:MouseWheelEventTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding OpenPowerSearchRequest}">
            <prism:PopupWindowAction IsModal="False">
                <prism:PopupWindowAction.WindowContent>
                    <local:PowerSearch />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding
            Key="F"
            Command="{Binding ActiveDocumentViewModel.OpenSearchPaneCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Key="Esc" Command="{Binding GeneralCancelCommand}" />
        <KeyBinding
            Key="F4"
            Command="{Binding ExitApplicationCommand}"
            Modifiers="Alt" />
    </Window.InputBindings>
    <Window.Resources>
        <properties:Resources x:Key="resources" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <cvt:BookSortingToBool x:Key="BookSortingToBool" />
        <cvt:PathToMenuItem x:Key="PathToMenuItem" />
        <cvt:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
    </Window.Resources>
    <DockPanel SizeChanged="DockPanel_SizeChanged">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{Binding MainWindow_File, Source={StaticResource resources}}">
                <MenuItem Command="{Binding ImportFilesCommand}" Header="{Binding MainWindow_File_ImportFiles, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding ImportFoldersCommand}" Header="{Binding MainWindow_File_ImportFolders, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding ImportLibraryCommand}" Header="{Binding MainWindow_File_ImportLibrary, Source={StaticResource resources}}" />
                <Separator />
                <MenuItem Command="{Binding ReloadLibraryCommand}" Header="{Binding MainWindow_File_ReloadLibrary, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenSwitchLibraryCommand}" Header="{Binding MainWindow_File_SwitchLibrary, Source={StaticResource resources}}" />
                <MenuItem
                    DisplayMemberPath="Path"
                    Header="{Binding MainWindow_File_RecentLibraries, Source={StaticResource resources}}"
                    ItemsSource="{Binding LibraryVM.RecentOpenedLibraryList}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SwitchLibraryCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding ShowPreferenceDialogCommand}" Header="{Binding MainWindow_File_Preferences, Source={StaticResource resources}}" />
                <Separator />
                <MenuItem Command="{Binding ExitApplicationCommand}" Header="{Binding MainWindow_File_ExitSunctum, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Data, Source={StaticResource resources}}">
                <MenuItem Header="{Binding MainWindow_Data_BookSize, Source={StaticResource resources}}">
                    <MenuItem Command="{Binding UpdateBookByteSizeAllCommand}" Header="{Binding MainWindow_Data_BookSize_UpdateSizeAllBooks, Source={StaticResource resources}}" />
                    <MenuItem Command="{Binding UpdateBookByteSizeStillNullCommand}" Header="{Binding MainWindow_Data_BookSize_UpdateSizeQuickly, Source={StaticResource resources}}" />
                </MenuItem>
                <MenuItem Header="{Binding MainWindow_Data_BookTag, Source={StaticResource resources}}">
                    <MenuItem Command="{Binding UpdateBookTagCommand}" Header="{Binding MainWindow_Data_BookTag_UpdateBookTagAll, Source={StaticResource resources}}" />
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding OpenAuthorManagementDialogCommand}" Header="{Binding MainWindow_Data_AuthorManagement, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenTagManagementDialogCommand}" Header="{Binding MainWindow_Data_TagManagement, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenMetadataImportSettingDialogCommand}" Header="{Binding MainWindow_Data_MetadataImportSetting, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Search, Source={StaticResource resources}}">
                <MenuItem
                    Header="{Binding ActiveDocumentViewModel.SearchStatusText}"
                    IsEnabled="False"
                    Visibility="{Binding LibraryVM.IsSearching, Converter={StaticResource BoolToVisibilityConverter}}" />
                <MenuItem Command="{Binding OpenSearchPaneCommand}" Header="{Binding MainWindow_Search_Search, Source={StaticResource resources}}" />
                <MenuItem Command="{Binding OpenPowerSearchCommand}" Header="Power search" />
                <Separator />
                <MenuItem Command="{Binding ClearSearchResultCommand}" Header="{Binding MainWindow_Search_ClearSearchResult, Source={StaticResource resources}}" />
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Display, Source={StaticResource resources}}">
                <MenuItem Header="{Binding MainWindow_Display_Window, Source={StaticResource resources}}">
                    <MenuItem
                        Command="{Binding ToggleDisplayInformationPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Information, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayInformationPane}" />
                    <MenuItem
                        Command="{Binding ToggleDisplayTagPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Tag, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayTagPane}" />
                    <MenuItem
                        Command="{Binding ToggleDisplayAuthorPaneCommand}"
                        Header="{Binding MainWindow_Display_Window_Author, Source={StaticResource resources}}"
                        IsChecked="{Binding DisplayAuthorPane}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="{Binding MainWindow_Display_Sorting, Source={StaticResource resources}}">
                    <MenuItem
                        Command="{Binding SortBookByLoadedAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_LoadedAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByLoadedAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByLoadedDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_LoadedDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByLoadedDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByTitleAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_TitleAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByTitleAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByTitleDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_TitleDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByTitleDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByAuthorAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_AuthorAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByAuthorAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByAuthorDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_AuthorDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByAuthorDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverBlueAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverBlueAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverBlueAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverBlueDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverBlueDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverBlueDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverGreenAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverGreenAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverGreenAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverGreenDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverGreenDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverGreenDesc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverRedAscCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverRedAsc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverRedAsc}" />
                    <MenuItem
                        Command="{Binding SortBookByCoverRedDescCommand}"
                        Header="{Binding MainWindow_Display_Sorting_CoverRedDesc, Source={StaticResource resources}}"
                        IsChecked="{Binding ActiveDocumentViewModel.BookCabinet.Sorting, Mode=OneWay, Converter={cvt:BookSortingToBool NamedInstance=BookSortingToBool}, ConverterParameter=ByCoverRedDesc}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{Binding MainWindow_Help, Source={StaticResource resources}}">
                <MenuItem Command="{Binding AboutSunctumCommand}" Header="{Binding MainWindow_Help_AboutSunctum, Source={StaticResource resources}}" />
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Bottom">
            <local:ProgressBar
                Height="5"
                IsAborted="{Binding LibraryVM.ProgressManager.IsAbort}"
                ProgressionRate="{Binding LibraryVM.ProgressManager.Progress}"
                ToolTip="{Binding TooltipOnProgressBar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>
        <avalonDock:DockingManager
            ActiveContent="{Binding ActiveDocumentViewModel, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
            AnchorablesSource="{Binding DockingPaneViewModels}"
            DocumentsSource="{Binding DockingDocumentViewModels}">
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding LoadLayoutRequest}">
                    <trigger:LoadLayoutAction />
                </prism:InteractionRequestTrigger>
                <prism:InteractionRequestTrigger SourceObject="{Binding SaveLayoutRequest}">
                    <trigger:SaveLayoutAction />
                </prism:InteractionRequestTrigger>
            </i:Interaction.Triggers>
            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <local:LayoutItemContainerStyleSelector>
                    <local:LayoutItemTypedStyle DataType="{x:Type viewModel:DocumentViewModelBase}">
                        <Style TargetType="{x:Type avalonDock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose}" />

                            <!--<Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />-->

                        </Style>
                    </local:LayoutItemTypedStyle>
                    <local:LayoutItemTypedStyle DataType="{x:Type viewModel:PaneViewModelBase}">
                        <Style TargetType="{x:Type avalonDock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />

                            <!--<Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />-->

                        </Style>
                    </local:LayoutItemTypedStyle>
                </local:LayoutItemContainerStyleSelector>
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <local:LayoutItemTemplateSelector>
                    <DataTemplate DataType="{x:Type viewModel:HomeDocumentViewModel}">
                        <local:BookShowcase />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:SearchDocumentViewModel}">
                        <local:BookShowcase />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:ContentDocumentViewModel}">
                        <local:BookShowcase />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:AuthorPaneViewModel}">
                        <local:AuthorPane />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:TagPaneViewModel}">
                        <local:TagPane />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:InformationPaneViewModel}">
                        <local:InformationPane />
                    </DataTemplate>
                </local:LayoutItemTemplateSelector>
            </avalonDock:DockingManager.LayoutItemTemplateSelector>
            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <local:LayoutInitializer>
                    <local:LayoutInsertTarget ContentId="author" TargetLayoutName="LeftSidePane" />
                    <local:LayoutInsertTarget ContentId="tag" TargetLayoutName="LeftSidePane" />
                    <local:LayoutInsertTarget ContentId="information" TargetLayoutName="RightSidePane" />
                </local:LayoutInitializer>
            </avalonDock:DockingManager.LayoutUpdateStrategy>
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Horizontal">
                    <avalonDock:LayoutAnchorablePane Name="LeftSidePane" />
                    <avalonDock:LayoutDocumentPane />
                    <avalonDock:LayoutAnchorablePane Name="RightSidePane" />
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>
    </DockPanel>
</Window>
