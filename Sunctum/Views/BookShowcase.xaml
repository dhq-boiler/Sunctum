<UserControl
    x:Class="Sunctum.Views.BookShowcase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:Sunctum.Views.Behaviors"
    xmlns:cvt="clr-namespace:Sunctum.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:displaytype="clr-namespace:Sunctum.Domain.Logic.DisplayType;assembly=Sunctum.Domain"
    xmlns:ei="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:helper="clr-namespace:Sunctum.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Sunctum.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:trigger="clr-namespace:Sunctum.Views.Triggers"
    xmlns:ui.ctrl="clr-namespace:Sunctum.UI.Controls;assembly=Sunctum.UI"
    x:Name="BookShowcaseInternal"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <cvt:PathGeometryConverter x:Key="PathGeometryConverter" />
        <cvt:MarginConverter x:Key="MarginConverter" />
        <cvt:BookCoverThumbnailLoader x:Key="BookCoverThumbnailLoader" />
        <cvt:PathToWriteableBitmap x:Key="ImageConverter" />
        <cvt:PageThumbnailLoader x:Key="PageThumbnailLoader" />
        <cvt:DisplayTypeToViewConverter x:Key="DisplayType2ViewConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <ItemsPanelTemplate x:Key="Contents_ItemPanelTemplate">
            <WrapPanel />
        </ItemsPanelTemplate>
        <Storyboard x:Key="appearItem">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0.0"
                To="1.0"
                Duration="0:0:0.25" />
        </Storyboard>
        <Style x:Key="Contents_ListViewItem_Style" TargetType="{x:Type ListBoxItem}">
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="Control.MouseDoubleClick" Handler="Contents_ListViewItem_MouseDoubleClick" />
            <EventSetter Event="PreviewDragOver" Handler="Contents_ListViewItem_PreviewDragOver" />
            <EventSetter Event="Drop" Handler="Contents_ListViewItem_Drop" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsScrapped}" Value="true">
                    <Setter Property="Background" Value="#88FFA500" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="PowderBlue" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="SkyBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="Contents_ListViewItem_DataTemplate">
            <Grid>
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource MarginConverter}">
                        <Binding Path="Configuration.ContentListViewItemMarginLeft" />
                        <Binding Path="Configuration.ContentListViewItemMarginTop" />
                        <Binding Path="Configuration.ContentListViewItemMarginRight" />
                        <Binding Path="Configuration.ContentListViewItemMarginBottom" />
                    </MultiBinding>
                </Grid.Margin>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemImageHeight}" />
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemTitleHeight}" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{Binding Converter={StaticResource PageThumbnailLoader}}" Visibility="Collapsed" />
                <Image
                    Grid.Row="0"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.ContentListViewItemWidth}"
                    MaxHeight="{Binding Configuration.ContentListViewItemImageHeight}"
                    Margin="5"
                    Source="{Binding Image, Converter={StaticResource ImageConverter}}">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource appearItem}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label
                    Grid.Row="1"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemTitleHeight}"
                    Margin="0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Content="{Binding UnescapedTitle}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Contents_ListViewItem_Sorting_DataTemplate">
            <Grid>
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource MarginConverter}">
                        <Binding Path="Configuration.ContentListViewItemMarginLeft" />
                        <Binding Path="Configuration.ContentListViewItemMarginTop" />
                        <Binding Path="Configuration.ContentListViewItemMarginRight" />
                        <Binding Path="Configuration.ContentListViewItemMarginBottom" />
                    </MultiBinding>
                </Grid.Margin>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemImageHeight}" />
                    <RowDefinition Height="{Binding Configuration.ContentListViewItemTitleHeight}" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{Binding Converter={StaticResource PageThumbnailLoader}}" Visibility="Collapsed" />
                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.ContentListViewItemWidth}"
                    MaxHeight="{Binding Configuration.ContentListViewItemImageHeight}"
                    Margin="5"
                    Source="{Binding Image, Converter={StaticResource ImageConverter}}" />
                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Width="{Binding Configuration.ContentListViewItemWidth}"
                    Height="{Binding Configuration.ContentListViewItemTitleHeight}"
                    Margin="0"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Content="{Binding UnescapedTitle}" />
                <Button
                    x:Name="MoveBackword_Button"
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    Click="MoveBackword_Button_Click"
                    Content="←" />
                <Button
                    x:Name="MoveForward_Button"
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="0,0,5,0"
                    Click="MoveForward_Button_Click"
                    Content="→" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="BookCabinet_Cell_DataTemplate">
            <Grid>
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource MarginConverter}">
                        <Binding Path="Configuration.BookListViewItemMarginLeft" />
                        <Binding Path="Configuration.BookListViewItemMarginTop" />
                        <Binding Path="Configuration.BookListViewItemMarginRight" />
                        <Binding Path="Configuration.BookListViewItemMarginBottom" />
                    </MultiBinding>
                </Grid.Margin>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="{Binding Configuration.BookListViewItemAuthorHeight}" />
                    <RowDefinition Height="{Binding Configuration.BookListViewItemTitleHeight}" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Configuration.BookListViewItemWidth}" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{Binding Converter={StaticResource BookCoverThumbnailLoader}}" Visibility="Collapsed" />
                <Image
                    Grid.Row="0"
                    Height="{Binding Configuration.BookListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.BookListViewItemWidth}"
                    MaxHeight="{Binding Configuration.BookListViewItemImageHeight}"
                    Source="{Binding FirstPage.Image, Converter={StaticResource ImageConverter}}">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ContentsRegistered}" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsDeleting}" Value="True">
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image
                    Grid.Row="0"
                    Height="{Binding Configuration.BookListViewItemImageHeight}"
                    MaxWidth="{Binding Configuration.BookListViewItemWidth}"
                    MaxHeight="{Binding Configuration.BookListViewItemImageHeight}"
                    Clip="{Binding Path=CurrentProcessProgress.Value.Rate.Value, Converter={StaticResource PathGeometryConverter}, UpdateSourceTrigger=PropertyChanged}"
                    Source="{Binding FirstPage.Image, Converter={StaticResource ImageConverter}}" />

                <ui.ctrl:AutoScrollingHyperlink
                    Grid.Row="1"
                    Width="{Binding Configuration.BookListViewItemWidth}"
                    HyperlinkClicked="AutoScrollingHyperlink_HyperlinkClicked"
                    Text="{Binding Author.UnescapedName}" />
                <ui.ctrl:AutoScrollingLabel
                    x:Name="Book_Title_AutoScrollingLabel"
                    Grid.Row="2"
                    Width="{Binding Configuration.BookListViewItemWidth}"
                    Text="{Binding UnescapedTitle}" />
            </Grid>
        </DataTemplate>
        <Style x:Key="Contents_ListView_Style" TargetType="{x:Type ListView}">
            <Setter Property="ItemsPanel" Value="{StaticResource Contents_ItemPanelTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource Contents_ListViewItem_Style}" />
            <Setter Property="ItemTemplate" Value="{StaticResource Contents_ListViewItem_DataTemplate}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu ItemsSource="{Binding ContentsContextMenuItems}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItem_Style" TargetType="ListViewItem">
            <EventSetter Event="MouseDoubleClick" Handler="Book_ListViewItem_MouseDoubleClick" />
            <EventSetter Event="PreviewDragOver" Handler="Book_ListViewItem_PreviewDragOver" />
            <EventSetter Event="Drop" Handler="Book_ListViewItem_Drop" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="27" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border
            x:Name="SearchPane_Border"
            Grid.Row="0"
            Grid.Column="0"
            Panel.ZIndex="1000"
            BorderBrush="Gray"
            BorderThickness="1"
            Visibility="{Binding SearchPaneIsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <Border.Resources />
            <i:Interaction.Triggers>
                <ei:PropertyChangedTrigger Binding="{Binding SearchPaneIsVisible}">
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding SearchPaneIsVisible}" RightOperand="True" />
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <ei:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=SearchPane_Border}"
                        Value="Visible" />
                    <trigger:FocusAction TargetObject="{Binding ElementName=Search_TextBox}" />
                    <ei:CallMethodAction MethodName="SelectAll" TargetObject="{Binding ElementName=Search_TextBox}" />
                </ei:PropertyChangedTrigger>
                <ei:PropertyChangedTrigger Binding="{Binding SearchPaneIsVisible}">
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding SearchPaneIsVisible}" RightOperand="False" />
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <ei:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=SearchPane_Border}"
                        Value="Collapsed" />
                </ei:PropertyChangedTrigger>
            </i:Interaction.Triggers>
            <StackPanel Background="{x:Static SystemColors.ControlLightBrush}" Orientation="Horizontal">
                <Button
                    x:Name="CloseSearchPane_Button"
                    Width="15"
                    Height="15"
                    Margin="5"
                    Command="{Binding CloseSearchPaneCommand}">
                    <Canvas
                        Name="canvas"
                        Width="11"
                        Height="11">
                        <Path Stroke="Black" StrokeThickness="2">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigure StartPoint="1,1">
                                            <LineSegment Point="10,10" />
                                        </PathFigure>
                                        <PathFigure StartPoint="1,10">
                                            <LineSegment Point="10,1" />
                                        </PathFigure>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Button>
                <ui.ctrl:EasyEnterTextBox
                    x:Name="Search_TextBox"
                    Width="200"
                    Margin="3"
                    Text="{Binding UnescapedSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextChanged="Search_TextBox_TextChanged" />
                <Button
                    Height="19"
                    Margin="3"
                    Command="{Binding SearchInNewTabCommand}"
                    CommandParameter="{Binding ElementName=Search_TextBox, Path=Text}"
                    Content="New Tab" />
            </StackPanel>
        </Border>
        <Grid
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <ListView
                x:Name="Book_ListView"
                behavior:MultiSelectorBehaviours.SynchronizedSelectedItems="{Binding BookListViewSelectedItems}"
                AllowDrop="True"
                ItemsSource="{Binding BookCabinet.OnStage, UpdateSourceTrigger=PropertyChanged}"
                PreviewDragOver="Book_ListView_PreviewDragOver"
                SelectionChanged="Book_ListView_SelectionChanged"
                SelectionMode="Extended"
                View="{Binding BookCabinet.DisplayType, Converter={StaticResource DisplayType2ViewConverter}}"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                Visibility="{Binding BookListIsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <i:Interaction.Triggers>
                    <trigger:HomeKeyDownEventTrigger>
                        <trigger:ScrollTopAction TargetObject="{Binding ElementName=Book_ListView}" />
                    </trigger:HomeKeyDownEventTrigger>
                    <trigger:EndKeyDownEventTrigger>
                        <trigger:ScrollEndAction TargetObject="{Binding ElementName=Book_ListView}" />
                    </trigger:EndKeyDownEventTrigger>
                    <trigger:ContextMenuOpeningEventTrigger EventName="ContextMenuOpening">
                        <helper:EventToCommand Command="{Binding BuildBookContextMenuCommand}" PassEventArgsToCommand="True" />
                    </trigger:ContextMenuOpeningEventTrigger>
                    <i:EventTrigger EventName="Drop">
                        <helper:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.Style>
                    <Style TargetType="ListView">
                        <EventSetter Event="SizeChanged" Handler="Book_ListView_SizeChanged" />
                        <Setter Property="ItemTemplate" Value="{StaticResource BookCabinet_Cell_DataTemplate}" />
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <EventSetter Event="Control.MouseDoubleClick" Handler="Book_ListViewItem_MouseDoubleClick" />
                                    <EventSetter Event="PreviewDragOver" Handler="Book_ListViewItem_PreviewDragOver" />
                                    <EventSetter Event="Drop" Handler="Book_ListViewItem_Drop" />
                                    <EventSetter Event="MouseEnter" Handler="Book_ListViewItem_MouseEnter" />
                                    <EventSetter Event="MouseLeave" Handler="Book_ListViewItem_MouseLeave" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="PowderBlue" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="SkyBlue" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <ui.ctrl:VirtualizingWrapPanel x:Name="BookListViewVirtualinzingWrapPanel" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding BookCabinet.DisplayType}" Value="{x:Static displaytype:DisplayType.Details}">
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItem_Style}" />
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel x:Name="BookListViewDetailsVirtualizingStackPanel" />
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ContextMenu>
                    <ContextMenu ItemsSource="{Binding BooksContextMenuItems}" />
                </ListView.ContextMenu>
            </ListView>
            <DockPanel x:Name="Contents_DockPanel" Visibility="{Binding ContentListIsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid DockPanel.Dock="Top">
                    <DockPanel>
                        <DockPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Width" Value="50" />
                                <Setter Property="Height" Value="50" />
                            </Style>
                        </DockPanel.Resources>
                        <Button
                            x:Name="BackToBooks_Button"
                            Margin="5"
                            Click="BackToBooks_Button_Click"
                            Content="Back"
                            DockPanel.Dock="Left" />
                        <Button
                            x:Name="SwitchSorting_Button"
                            Margin="5"
                            Click="SwitchSorting_Button_Click"
                            Content="Sort"
                            DockPanel.Dock="Right" />
                        <Grid />
                    </DockPanel>
                    <StackPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <ui.ctrl:SelectableLabel HorizontalAlignment="Center" Text="{Binding OpenedBook.Author.UnescapedName}" />
                        <ui.ctrl:SelectableLabel HorizontalAlignment="Center" Text="{Binding OpenedBook.UnescapedTitle}" />
                    </StackPanel>
                </Grid>
                <ListView
                    x:Name="Contents_ListView"
                    ItemsSource="{Binding OpenedBook.Contents, UpdateSourceTrigger=PropertyChanged}"
                    SelectionChanged="Contents_ListView_SelectionChanged"
                    SizeChanged="Contents_ListView_SizeChanged"
                    Style="{StaticResource Contents_ListView_Style}"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling">
                    <i:Interaction.Triggers>
                        <trigger:ContextMenuOpeningEventTrigger EventName="ContextMenuOpening">
                            <helper:EventToCommand Command="{Binding BuildContentsContextMenuCommand}" PassEventArgsToCommand="True" />
                        </trigger:ContextMenuOpeningEventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ui.ctrl:VirtualizingWrapPanel x:Name="ContentsListViewVirtualizingWrapPanel" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
            </DockPanel>
            <DockPanel x:Name="ImageViewer_DockPanel" Visibility="{Binding ImageIsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid DockPanel.Dock="Top">
                    <DockPanel>
                        <DockPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Width" Value="50" />
                                <Setter Property="Height" Value="50" />
                            </Style>
                        </DockPanel.Resources>
                        <Button
                            x:Name="BackToPages_Button"
                            Margin="5"
                            Click="BackToPages_Button_Click"
                            Content="Back"
                            DockPanel.Dock="Left" />
                        <TextBlock
                            Width="75"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Right"><Run Text="{Binding CurrentPage, Mode=OneWay}" /><Run Text=" " /><Run Text=" / " /><Run Text=" " /><Run Text="{Binding OpenedBook.NumberOfPages.Value, Mode=OneWay}" />
                        </TextBlock>
                        <Grid />
                    </DockPanel>
                    <StackPanel Orientation="Vertical">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type ui.ctrl:SelectableLabel}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <ui.ctrl:SelectableLabel Margin="0,14,0,0" Text="{Binding OpenedBook.Author.UnescapedName}" />
                        <ui.ctrl:SelectableLabel Text="{Binding OpenedBook.UnescapedTitle}" />
                        <ui.ctrl:SelectableLabel Text="{Binding OpenedPage.UnescapedTitle}" />
                    </StackPanel>
                </Grid>
                <Grid>
                    <Grid>
                        <Image
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="{Binding OpenedPage.Image, Converter={StaticResource ImageConverter}, ConverterParameter=RAW}"
                            Stretch="Uniform" />
                    </Grid>
                    <Grid
                        x:Name="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea"
                        Background="Transparent"
                        MouseEnter="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea_MouseEnter"
                        MouseLeave="Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea_MouseLeave">
                        <DockPanel>
                            <Grid DockPanel.Dock="Left">
                                <local:BlinkBlackWhiteButton
                                    x:Name="GoBack_Button"
                                    Width="75"
                                    Height="75"
                                    ButtonContent="&lt;"
                                    Command="{Binding BlinkGoBackButtonCommand}"
                                    FocusArea="{Binding ElementName=Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea}" />
                            </Grid>
                            <Grid DockPanel.Dock="Right">
                                <local:BlinkBlackWhiteButton
                                    x:Name="GoNext_Button"
                                    Width="75"
                                    Height="75"
                                    ButtonContent="&gt;"
                                    Command="{Binding BlinkGoNextButtonCommand}"
                                    FocusArea="{Binding ElementName=Grid_ImageViewer_Panel_BlackWhite_Button_MouseOverArea}" />
                            </Grid>
                            <Grid />
                        </DockPanel>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
